import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import Select from "react-select";
import axios from 'axios'
import Router from 'next/router'
import Swal from 'sweetalert2';

export default function Add() {
      const [categoriesList, setCategoryList] = useState<any[]>([])
      
      const getCategories = async () => {
            const response = await axios.get('http://localhost:8000/api/categories');
            let categories = response.data.data;
            let em: any[] = []
            categories.map((_: any) => {
                  em.push({value: _.id, label: _.category})
            })
            setCategoryList(em)
      }

      const [title, setTitle] = useState("");
      const [body, setBody] = useState("");
      const [category, setCategory] = useState(null);

      const saveUser = async (e: any) => {
          e.preventDefault();
          try {
              await axios.post("http://localhost:8000/api/blog", {
                title,
                body,
                category
              })
            .then(function (response) {
                  let errors = response.data.errors
                  let txt = "";
                  for (let x in errors) {
                        txt += errors[x] + " <br> ";
                  };
                  if(errors){
                        return Swal.fire(
                              'Input Error',
                              `${txt}`,
                              'error'
                        )
                  }
                  Swal.fire(
                        'Success create blog',
                        ' ',
                        'success'
                  )
                  Router.push('/')
            })
          } catch (error) {
              console.log(error);
          }
      }

      const setHandle = (e: any) => {
            setCategory(e.map((cat: any) => cat.value));
      };
      
  return (
    <>
      <Head>
        <title>Add Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <form onSubmit={saveUser}>
            <div className="mb-6">
                  <label htmlFor="title" className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Title</label>
                  <input value={title} 
                        onChange={(e)=> setTitle(e.target.value)} type="title" id="title" className="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-sm-light" />
            </div>
            <div className='mb-6'>

                  <label htmlFor="message" className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Content</label>
                  <textarea value={body} 
                        onChange={(e)=> setBody(e.target.value)} id="message" rows={4} className="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Create content..."></textarea>

            </div>
            <div className='mb-6'>
                  <label className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Category</label>
                          <Select options={categoriesList} onFocus={getCategories}  onChange={setHandle} isMulti />
            </div>
            <button type='submit' className="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Create</button>
      </form>
      
    </>
  )
}
